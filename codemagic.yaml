workflows:
  default-workflow:
    name: Default Workflow
    max_build_duration: 60
    environment:
      vars:
        FIREBASE_IOS: Encrypted(Z0FBQUFBQmYwb0ZuRW9PSDBnWXRrVXYzV3ZoQlJpbGZRTVBkUjRHTkdHWkY4dTBBTldITU11X1hlOXZueGlxZGsxU2JyU29mRzFDZFcyMllVTGpUUm9vUDU2aTh6cnkwdzhZRm5kdk1TbjcwbldDTEVfWmxOYzNnUjdxaWM5SHVsUi1neHA4NzJXeGg3bUdWU2pZZzlzRUJObmNWandydF9IbzZIel9BVl80N0h3VGFPd1Y3OUdOYkFVYlpiY3NsZVJ1VG42WjRlT0d1WGgwNTZMYlEyRzJXMXVtb1pFdnYyZjdGS2xaWDk4M3h5NmhFMUNCamRBQVZjUFgtdk9HTXBCMWZ0Ujd5cnZDLUlhTUpVa2ljcVVpUUllWnhJRXBWZzVwcTZWUXl2el9iX1JHamE2c2s3RTN3cDAtSDhQbHFrMWd0TFFHVnpjMjRWMV8yM2RsSXg4RHE5NTg1VWtZQThyVUFUdGNHZlpoMmxCNWcyZ01aS2d0cFJXTy0waEp6MkhMTkhwUmprdDE5ZGM5S0VkSmh0SzhyTEthbjlNMGlUSUdlRkM0X21GU25HMW14Z2otSmp4YUo2YVJHZ19kdTNmclROaDJXc3poS0w1TDBjOWhRcl9HTkM3U20wZ2puMi1VM18wRlVtS1lLazBLaVg3U1ZjZnMxaGVNSVRMc1k0eU5TWmZHSzJxS1E1akpmMkpOSHBRVlU2SzdJMGM5ZWpZYWF5Wmd3M1FDX01MSXBRTE4tTklSMnFhcDZLTndHSFFZejNVZWVISGpJWE5SNHNxMmpoTThrTWVuSDl5ZGJpSF9IZXprblNQX3FYZTk5Sm9pbVZGNXJiVW5yZHFfQUVIdWlUb1hJN2tVZEw5SVNzSHpLUl9OcHMwM2d1ZmVia0s4WFNObzhnalFnTG1scTVuODMydUp5bzRaTEZ4MVV3X3B6STVhQWk0QVlXZUZ4eFFmWWl5dFVYN3d0REpPOEhXNWtvMEM0ZVktYURpNk50U0RaWXg5WUNJVXkzckVYdzFpbUxlOERHc21qbW9CUmcxRXJPazZ3SUZaUFdpVGdabWhPMnVQYWFROE9NdTNMc05iQWJlQUxQaUc4N21xQlBCbUpUYUFzQ1pOU0RRVjd3MUlxbE9qMmF3ZWNGMTdsa0ppMXYwdGFqXzBrdkpIMWFUWnFQdGk3QnNhSGFqY2xIdWo4TmVyVHdjRXRkN0ZtLVY2S1VGalpHWFdmTi1jenBtSHVDVWNhSFBKWFprRWtDNm5Vc1lBUjBYckRLYkZMQmh6X2c0a3EzU1E5bG1NVzZRUlFNb1l4dmlQY2x4MmhETGtvRERzNy0ydmdzd1dwLXBMSzlsS2YxQU8taWp4d0lkT0FSNzFqakJUa3NRQmVtTDBrRncwSzJEc1FyeXZocnFSTmFUVXFwMFpEbUUzVm1mMTNydjJaNVhwQnZ4RU14VWJoLWl3bE9hWmNuSERVS2pTci1BNHFJcExLTC04YmNKUVJIZmdFd2d6Wld0VDI1ODBVd3VpREZKMnZ4WXR3NzBzcHpBcGZWTnYtcGJuMllxcVFPU1c2dnd4RTBUWExvY3ROT0laZVJsMkZ3Mk16QTFwT0E3T3pWNWN5UnRfY0t4YllHTUlSaHY2R2ZQVUxPb3NYbVhNVjNnT1ROTjJzTXFuZUlGdktET2lYMmVXbkQyeUZhRkpLSnhCakpOVTJNck5RVGM2Z2lPTWlhSXQtNDRpR1dTbElUcndwaHUtS0JVSkZ5bUtOVE40d0lWbDJpYjF6bkNnY0FtTTNSbnNxMGRZcTBhaENDRmVNaDJOdWNoRUtIR0VxejVrWTJHQVNobjl5eFhQTnZNMTVuUVk5Zk0wSW9BYnRaUEJxaWcwZXV5MTJoWnRYcjJ6Z3pZekJUVmdDaHhYd3lZbTRiUmdUVl9SbVV0ZmNWanlFMDNtdHRDdXhiWng4UGphSWhpUEVXcjhidGFwOG5FUU5xWVlMekU2bS1ZdlhfLVJ5cWR4dXVWRk5waXhYaXVXeVZ5b3VUQTBIYmt6OHg2bXEzSGJFRmo4V3ZWNFYzemFpcGtRdEp1OG13ZzhLMldiMjhCbFRoc0pzYlIzWFRWM3g3dVZoZm9pLU04Q3JxazJnc1BPX2c0VC01am9NSmpXSnFxeGMtdGw5ZjhkWWxNQkJRS1NVc3V2a2pkcmJuRnBocU1OVkI5UkRuNVJraHVRRUhQZDUtOW9WWUFWcENqaEJjemZEbTRpMm1JTmI2WWgwTGQyRTlwQXJWVkRQcndmQW9Sb0t6bjR1VGVGMk5PbUdBZ2FmRWM1SFljMnJyOU5zb0lNTGVYQkkwLVRFRm84dEJ3dGhaS19zZE1RVzJRaDRFRUJ3MFViak5qUlVOenJqenYyaS0zTzlQVDlRbkVkaUhPN1FjbnQxQ3M4a3dkS1VOazQtZFUzaHR4Skl3bzJVYW5zd3BGZGRBa2xFTG02UWhSM3Z5N0lMcENiNU9MQzFDeWtvRUFwRFJ1SXV6Z3FSbldvN1JnMVZtRmNVX3ZYbEJWa0tZelRUbU44ai1CYkk4NXltOHJGZ3VTRUNMTXJtU0JRdEdKTHdMUkg0eW1MNTNIVEo4YkJHT2RDSU4wdnY2cXBEMnduelZoMmVxNS1UZlRkUjJPbHhzQXN5d3JGRUUtbWk5X2dva19vZTN5czlyUXNrektCM2FaVGVud0cxYmhHZ3FGczFySlk0VERCeWhfQlN2V3RoVGpQRUR5YU5XeUF1MGxNNF9LNTNrcEI2eGRDTjc3T292SUtPdkNtbU50aDZzVDNxc2VYaUtZbXBfejNmV2NsaTRlU0VCQTNKMEhKT08wdlc3SVlybDdsSzQzaTVlRU5pMHpOTjRRVk5HUFlkVWhENEtEMGNRZnBfYWtBb3gxZ19hVndRX05JSEFHZEdlLUdPS0t0enFGMXJfSWhNUDJmWWtXeEdhQ3cxNmJiU25zWjJodEZ6dHdfNTFFeFJUdUtXbHM3SFB5UEN0cXlJNnEtTk9HQzlRTFByb3lweVd6SjktTDBRRUpJYXhoY0hEQWM2UldtM2Y1YTY5clRoT1ozbnRxaW8zUWNLbTNTYnMzdzNnclpEazl3MFRfYThHWVVxRTRHdXlQenNPYlM5NEFibFlLaWlnXzRiblBHV0FpWllPbnFSbS1sd2lnbjNvaXNjS25tUG1COVhMSVFyS3lBNGlRRzAyZDJJS1NBZ1BkRU9tcGMydGVPbW41dng0Q0I5TGVfX2dNTFlpT01BcDhRQ0pXM0VGeTF4bnd2ejdoS25HU1ZMd3NMWUcySUladzFhUVkwOHcyTHpQX3FKYjNtRlUwZjRFMWhMcjVjbEFZbmFtWk82bGE0ckNsZ0RKbzNhR0pSekRjUmJweXpKLTVYNzhBU1RDOXJzOFVIZnZOdlFQRklfNHRoR0lacHJUNXlnbWdlVVRLMFpZbmdJZElsa0hUa0hyVDh0RWRsbUpwOVZWQ0p3NTU2NUYySnZwRkF1WUE5ZThJWHJiMFVQTEIwam10ZHZvRWUtcDE1QXNlVzVueHp2a3lJcVliMkhjOV9VZjFCOWJWWnpzblV2UjRwSTJKMnQ4eUJGN2dSdkdWalVSX3dpZms3TllJMWlrY0NwZE9uNTUyMkpqQzMwZnlfdmRvMVZrZFo1S003a2JYWmN4VjNtS2Jrdk15WGUyWmpCUlNSZFZaVnN6b3BocW1OVnRxY1BPeHhCb0FmODJjM25Td2hBV0VBYXRWZmZqelhnSENYY1hRRzJQQ2V4a2J1bUJmTUZBRm9JRUNqWEo5X1ZLQ2p2emhQdzN2Zzh1MExEMXVHNGljdXJ4U1paWG1JdGppWXBrdFhuckZRNHFVTTh5eHo5UmJZNlczblBrQ2h3YWNSdmp1SVBKb1BYX2kyeWkydWctVFYtazV1U1NkWHFaV3pPV3NYakhjaWozUllFbDVscFFlMDlMMmM1SGxvMl9pdXNvcDJIemF6YXhLZlpGQUJ4aEQ3RTRGNk1hcXdrV1MxRk1SeGExN2hHekVNOW0yeDRUcFhvT3RsdXZoWUx1REo2RDd2X2ZzTWpiaEVhV3NCYktvTzI2X0xhQi12QzB2V213RFp3a0tVZWt6WV8zVVZNc1VtTFloX3psakxhTHZfRDlxQjZBazdUTTRKeWx2dnNNVVdtQWlhc3pJVHViMEtvX1ZmRDlSajY1RXdkRHNNR2pURGNVU3I0SjZPVlRxSjJMckFwalpNdXc2cDJwVDlScEFpb3AwMFlwTmNReTZKRjNnZzYycXFuUVA2NzhPQnBrZ215bHYyR3dOcW5jdG5hTldQSEZSNXhIUWlDMUJNOExKM3FzaVlMUHhKakJ0Mll5bEtVeWtSSjkwNGpSZTVzTUEwekJpUjVQVXhHV2ZfRE9qRG1tMUhjdVBuXzEtd2JjMXhqYUMxeXYtcXVwUmI1NXk5YzAyX2k0QUlxRE5sVHZYV25sbGdCVmZDODJrd1drUG1QRkdiZWUtWjU3Y21ydEFsYkZMZjRlNnJNa0tUaDZHeGg2QzZRcjU1RUpCTG9MaHg5OEEzOFZ1S2I1X2hRblczZmJ1WlN0elN4U3pTQW1uNEZTdDg1N01mbGp4RmlVd05CSXlCaVotVWRJdGhzN2VvTXdoTjhYSFBlWl9mUmp6Rmd1b2FPM0VXRmhrNVJBSV9raVZ3RU02bkQySzliWURWVnVHNU1rN0YtT3Z2cmU1cnZXQmtmLWV4NWhPN2pXeVBuYi1sTGRSaE5jUXY1R1EtT01EQXpMOUF6RzVLamExS1M5cVZwWWd1MkcyeEt6SG5RWjhGWEtzZm9jZDBhaF9uOU1OdnJGWS1UTW1qaC1VTHVEVWJtSVYyZkF5UTk1VGcyVk90OF9sQjFFYjlqeXNDbkV6dTRKZFlTU0hhem0yRVRoYm80eVNWaVhBSVZiN0JYcWNlVW1KZFBLNVVyLVFvcWhDNklxc0IwSnJSZGFxdHU2TXpVUTg2d2Y3QzhjcGtBMVVuV1h5bEM3V2VBOHl1WlUwYUtkNnhReHY1M21SaXdTTEIwZWNqdmtILWQ2RHRma3FlZElsZHNWbkRWaExGaW4tMndTeEZNczJQRkxEZVlZdlFJOGdCWDlZZXpnaVJvQ2xWVGlIVThwZllmbzJjYXdKUEVvUWtINXNjM2FILVhqVTUzTi1jdlJzV1F3TTRHNzdRSXRmZXNIZ2xHaU5qV3VOTFNkajhDYmp4cHVFLVBVazg0VUpYdzdUZ1FnTWxvUlRac25qV3FDV0c2TWxPSHhZR2lZd0RVVnpFckdLeE5TMTB4N3RDQWhtenJncUh6QUdfMTNEMGIwU0JuY0RfTDl3VkFuTExXY19DN1NPVzdsdHM5TFJDYnF2LXF3TjU4NFBYZlZlNEREcUQxNDNKOG5mZk9pWkdYZkRobEc1Y21YcGFqMnJGeVBkaFdWNmd3OEswY1lEeFJjS052Qmxyeg==)
        FIREBASE_ANDROID: Encrypted(Z0FBQUFBQmYwb0ZuNmVBUDBlLVZjR1V5eVI3NWZLNUlaQ2E3TU1YUi10TXNlcFZvMjU0Tmxlb2pCeDFoZHdoVlo3SjZHeVE0d0lEeG1RTFZYUlBzWndsOEQ2QUtGbU95SHpESzc2bzRvYU9GczZ6MmpYYUdVOXpNWlhILWFrdkllUS1teFRUOGwzMW1BUTJ3Mjc0aDBzTGY4Tkt4Z3BfZkhUamEwcnB3Z0RqRkstT1VCWFdhSEg2ZG5kUGxkd1lYS2dCcHYyNVlxb2xiR3lkTzlkNVdoUWQ0Sk0wWXIyaTRaQll5cVRDcF9TMTMxWlZtdFJCQ1AwM0xrVlVDMlFESHB5eExwbjFwUlpHbkhNMUZJUGpGb1AxZUMyS0EzYWZBU0NqaEszcS1QbVVuWFc4aHZTZHA1a1RFNjd4U0tNN3d2UVB0TWRob0FUVWVYQW9JdndfSU9YcHZRaEVXQXJ4SDRsRTVSY05ERDNLWUo4NTU2eXVnS2VpUS1Dd3lhUlhrV1hTa3owTGJNYjFhclRoUWlVenF6ZUd5MU1SME9IdzVtbV9ielZ3TEJLSnlmOEdUR2xkUXhRMkFSNm9zRkF1bHNUdndjSTdPMzEzZlU0MmhHNGhsTHVsQ1dDN3AzNklUaUs0VGY1emgtVDRjSlIyMDR2U2NBb2I4dlFlbjdDZTA1WlpoNVJhQThyeDhIdTJCV0RlQ1k0RU8wODlhMTl1Vjh3VEx4ZzNGOFkxUVVKc2ZEQ2htR0VwcVZXRWMzSTY2ZjN0UUZvMTZqa3JIOENJb3B1d1BLSElBeWV1X01UVkh0aXBsNjN0TmVYRW5GOHNXUEhQMWdIQXhvTExRdmQtVjZyTnJmWllJSXRUTG5IU2xfMUFKSVp2eFdXampGSk1rVWlFc0dxckN2ZzByLUtkUVJZWEEyX1VscHBxLXp0XzZuQ0VSVHRIZlBTVk1rUnowVnFNaXhfa0RCUl9pMXR2VUVyYktySGhITUFsNVlOLUc2RVNZSk1jWU5FMjhWRXZUMFRLdkk2bkc1UFRkOF9obU42dkRpVHNyYV9lUFFwYU5KVk5MYXdJV182dl9TT21aYThnT0J1Q3dUSFdSbVR3UUNocXRWNEFCSW5uVU9WYUYyWU96RURkZUhjTmxQTjI1aTh5alRZMm40ekhtaHBLUWVnYmVRMTd2d0lMMUh0UVRaSUI1eDUzOXhxUUcxeXM4LUNPb21qU3dIdmhGZXZ1TTlRdmpoTjJsRzRCTVJEMjg4Wmc3Qm9mcW16eE5yQjUwR3RpU1Y3SE5USHpnT1dCYi1QSGxwR2VMVDM4RnhBdkZmY1VLQnlERWVSYVQ3Mzd6NjB6dGpDOW5OTHVOM2xFRk9SVkFGMUh0RnpRZmlFSkhxTldjNFoyWXVycnpadEpGVUhhVEhOcWVrdnRnaGFuMWkwTlRlcmlnNVVEdUZGVGtEZmlteDktOVdSNS1ZNGdaMFBOWWYzdm5FRTJ0QkthZ182OXlkSTdNT3VQSGFJOHd6UG1OVGtSU2dfWGtxdGFPNmtQSmZqalIyaEFEZG9ELVlpOEpNMHR1TXhWcFE4NGRBTjVmbERFM2lDbF80TGt0bU5ydWE1MG03a1JnT21NamthT2dqSEJmS0VzeTdqTXU2c192NkNXRm1WYlRRcFNGNmkwT0Nvb08tLXRBdTZ6c3Q5VkxaanNra2hMZjhRLWthY296elZlWGJSQTFhZEx2UVJScVIxQU96ZkR2Q3NHeHA3NW1rNk9UdG5aQ1E2TDRlR3Yxam5WS2dCVU1QX0hNR1ZyVktxWm92a25oeUsxcXl1SUV2cWRURW00dTQxSngzRzhvUzhJa2tOcXh6RmQ5MHJLcTJ0QVdiZmh0blRIN1hhV0FmN3FpYXhBRVRkakJkQjIwakNvYkNOYy12ZDlOdzAzT2JGXzJqUzlhYWdBRXZtTHQ1bGxKVDJXTnlncjFOQVRESnhsZUYtVnk1cWd0WExlQ2Y3SUttYWhUUEVsQ2VscEZuOTcwYmRROUFTdzY1UjEtdU9lYlN6NnpCX1NNOURoZ3V3MjI5LXZ5ZlNZRmJkZ1RlRkNuMlV4c3hlNENIbWZNdG1ZTUxPM19JMjEzSGJnQXpKUzVpX2xZVm12U195VDF1UEZwMkZWQ0FYSVJqVk9Dai1HcS1oamlmUXQxU3VDRmdhNUFuYXpydmRaMVNXeXBPdWV0SUtkLXdpQURxRVlVV0JoWWJLN1NPN01qaTBkbTdRclFJcng2Umt3TXlXbHJQM1ZuSXRVMWduZ01hMS1LWUE3a2JkZ1d0TUZpMTlQYUNUZURHWWoxY3lxbW8wT1p6b2hrRWdsel9RM2tFaGp6VjNBUDRCMTBzUV9wRF9oYTJCYnlYa2RuV3Q3YjVTQ2Q1eUFvUUpkWDhQZkQtUTVCVlBFMkRtSlB4THpXNUxSS0pNS254YmVhUU9tVDAyZ29TZWUzVHUyNlpjZC1WT3hmWDJzblNnbTg0aF9EQXFTZ2tzWjhqc1JwQ2lMV0JocEtVZTFIeVhEY01QSGVOR1h0LUxtZHhtQjVnODNKdmhnRHhzMy14ZDB0dVhZNnB6bUJ2Rm1DdzhjM2stZ1VLeV9uZGtaenh3cEZxYk5HRjJzLUJoZXlrTm44RURqaTlhVWlabng4R0MxVmtTdDFRaElTUVhMcFo3QlRHdVdSODIxSmpBeG9pcUN2dUZXRmNNLTF4elVuSktNWGVmLWJYTzFmYUpWTkdhamx4N09lU3NVZDM0TXlaWHlreEphbVdVNWhTWEVqbEdZVlBxMnRFSU5JUmFUQUtVbWZvZjJmZTZ3S3M0aTVIRHJxZzJFaDNZdThPMGhvQXBIeW5CTnJkU2VWa2tTZnhRdXJFWFFhWFp5U3BOd3hRbGJyTTR4cVdTZVhrNDh3TXVmLThuVkNFSGdOUWdPOU0wWnFLb0hvUVNQN280a0J3YjJCaG9SN2tmQ29LN09Cems2Zi03M1VYY0x6OGpmb0JEWmlJdmRqUVlEOFZZZk9MdnI0bU1tNW81eks4bVFiZzdLalh0eVQ1YUFNUFhnS1ZrOFZEa0g1dlluQkVGdFdPcnUxUEZ3bDJNM2xwQ0xSR2ZjcFhkNWRySnBERUV0OFhaaWV5X09WbExzaUtpNE9pUldTdTJYMnBGS0dUWDFWSG40SzJjWnZMaTZjeGNfMVpCTGotTmVRTThlUTFmRmNESkhKZ1NhZlExd09RRmhhbmxKNFNNc3JxRkd6UXZMTHltaGdLNmV0bEQwTmZDX1RWWEdNcTlZbno1eE43UUx2dDdqVjVPNHVSY3g4Uk5VbFJ0S3dqZjEzWDBZQml6UlA5b0JkUUw4Y3prVjNwU1lhcTEwWEY1SlRXUVRiakpnRllkTWhFdldEZ1V6QlQyNm90b0F0aE5CWXcwa2s5SkE3RnpNR2VheUNVTGl0a244clF3Nmpsd2VMUHprdWZGMGRMV256SVRlVm5Va2czQzlKUDJXR25oZVpLOWhyWGRUdk1OVDZLc0hzUDctR3l2ZmRjamM5bjBFTkxIb0w2SmdKdVdXR29VNHo4cW1va3RTaXQ2eWgwMmpLUHRfS19EZ3FBMWhZeGdqZE1kSnZJbFhKN3JuMWZWUm92eXAzMXA3b0l3cHM1UkY4N3BIbEFGYmRBTEtqMzlDbzlCYmFTQ01EYVdSXzNzM3ZVN3dvbW10dUFGVDJnU0NrbjVvSHRlMkhtWkR0eGlPbWhIbk1LSFBnQUw5bDAxWGlhaFp0dnF0ekJwZi1tUE82NGVwek5ZMGkwM2JCUTNjT0cxbl9JdktkS0tSdzJOX1REakRMV05icFRNeldFa0hTS0VwWjdYLVFIOUppeFR1MzJGc01CSXBCVUhNcWwzYlI0TzZ4VE53Mzc2dkNQSE9xNDZHN2pjODB1Qmxyb1ZPYVBsTERfejdERW1UVXJaRGoxV2VyTnZ6cHNOeTNCc3JhWVAwYnNZWVFmMWJlcEotRTljaHFldzlLTmVldm9sZERJVG96MVRyTDlvdmZSVXdhN2xfaVJIcTRDbGpSUV94MktKaE1rR3lMTm5BY1JwZGJ4cjNfZVVubkJpLTJpZlpwLVVEVi0yY08wSEFMem1Ua21kVTN3cHVQd2xOWU5iNWM3ci05WEVUSGo4blBQMl9hVFBtNzhFdnlKUnBSblJBTlVGNlFXMHpubGtSMTdtZFRBeHZCaG93UUYtYzBhM0U4a0c5RWpKaFk0ZHNJelk2Y0k0ZlRGa2dBdk9nY1RrbzBvczRHck1hWTd3YURpczJKc0w3bjJjc1VPZG9hUzQ3N2h5TnlMb004VDNuLXc2WmFNUmFhNGttcmpSTnlmWVVJR0pBLUdSa3AwdnRkcnpGcmZJaDRybmVEMmVTSEtlRml0M1o0a1dOd1Q4MWN0WUE4ZjdNVHY1c1IyT2hFMWlUYXBQWlJtTTVOODZlY292LUpLSmNvUXVXdmkzS3g1YmRkVU1yMXNweFVQd0FSRmRNOEFta3dZazdjTWprSTVEdGVpOWQyYTRHSXVncVlVRGFjTndTVEtEWXZNNWhpU0RxWkxhTjA5QlNlOElUYmJNNEFBRE1sdHRsWV9fLWNRRm5xZVdRZXFLLUJNRGZuRVloNUF1a0xacFZ3NVVJVFpGYnFBZVZsZjBKaS1xb3lVdDFtWE1CRG1LUmllX0RnTXdCQ2xBaXRIOGVhXzdSNFpFWlBMZFVKOVpldEFkMThEUzF3YjBqcDlpbVJjME14VmUwbFd0Q2ZscUc3OUhhOEFNNXRpWl9PalF4RmJscW1aR1plMTl4MjZGajVSejFCck1rSlNrc0dTYTRBbDlJQ1o2UzlXVXRFb3JiMHliNkJqR0hvZlVrSGpkWWNKdVQ3UTlhY1lRRHhqMUtDQ1lxT19CYmlwTjRsV1pWZ1JDNF9YZktia3M0OGRKdz0=)
        FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmYwb0ZuYzIxTUQtMnNrcWViNFo2dTcxUTNPaUlIS0RhT0ZVeW5nS3FXQU5icDlzUW5KcnpiU29uYVVEOW81WDBlb0h4UU16YkUwS1dRd25TRzlGeVpTN29id1RsNzN1Sy1Ubi10SC12YXFQVmxWZE8tQlEtS1h4SENtV1ZXLW1lMFl3Rm40TjN5WDFrT2w4MHNPR0NKbVZkVlNobmhFSFpJejVnTmw3XzFqN2RKZ3Q2MHE3ZXBlT2ZETlE3dng0bUNqUmpXM1VuUUJmaF9taWRoZUtrbFhUMzJrMkhWUkNUWUM2blgzdVpVVGhFREIwWVVad2VXNlBvZ0FqMERIemIwRnNpbHBzdjhjQlIzSHJSVmE3VHNVc1BVR2VWWkx1TjNpaUZZRlE5WDlHNlNuamMyQV80b0ZUaTJlWGx1eXVsWEZPQ0p6a0xBQU9udUdnNHczejU1a2xxVXNfRHpJaHlYaWRhV2FlNkVhMm5IeXJkcWZGMERLcExrblBWakwycktjcmQ3X1J2Q0ZuSmdEN3d2emRUZVlWLS1NcGVoRVhzSVkwMDZrck9qYmw2U0F5MHY2QVREOTBVVU9DdzFkY2hxNC1peFJKN0pxOVZMZkRmMGt0RU1HSlp2V3hGaVN5Q3RwR0Z5TGwyd25RWEM3M3M9)
      flutter: beta
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
        - $HOME/.gradle/caches
        - $FLUTTER_ROOT/.pub-cache
    scripts:
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - cd . && flutter packages pub get
      - cd . && flutter config --enable-web
      - cd . && flutter test
      - |
        #!/bin/sh

        echo $FIREBASE_IOS | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
        echo "\nListing iOS Directory to confirm the GoogleService-Info.plist is there!"
        ls $FCI_BUILD_DIR/ios/Runner/

        echo $FIREBASE_ANDROID | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
        echo "\nListing Android Directory to confirm the google-services.json is there!"
        ls $FCI_BUILD_DIR/android/app
      - cd . && flutter build apk --release
      - find . -name "Podfile" -execdir pod install \;
      - cd . && flutter build ios --release --no-codesign
      - |
        # build web
        cd .
        flutter build web --release
        cd build/web
        7z a -r ../web.zip ./*
      - |
        # Publish to Firebase Hosting
        firebase deploy --token "$FIREBASE_TOKEN"
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - build/web.zip
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - schlereth@websight.de
